# Default values for url-shortener-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: devd/babbel-task
  pullPolicy: IfNotPresent # This can be changed to IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: 
  - name: regcred
nameOverride: ""
fullnameOverride: "url-shortener"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext: 
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false # This is commented false as I am using sqllite db to store the state , incase of proper db like rds or elasticache I would make it true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000


service:
  type: ClusterIP
  port: 8080

app:
  containerPort: 8080

# Only incase of non prod , In AWS prod /staging env this showld be fetched from AWS secret manager
env:
  AUTH_USER: "admin"
  AUTH_PASSWORD: "password"

# External Secrets configuration for production environments
externalSecrets:
  enabled: false
  secretStoreName: "aws-parameter-store"
  awsRegion: "us-west-2"
  authUserKey: "/url-shortener/auth/user"
  authPasswordKey: "/url-shortener/auth/password"
  dbUrl: "/url-shortener/db/url"

# Environment secret configuration (reads from .env values)
envSecret:
  enabled: true
  data: {}

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
 # Keeping it commented for now for the sake of simplicity but this is required to enable https for k8s application . To configures the Ingress resource to use TLS (Transport Layer Security) for encrypting traffic between the client (such as a browser) and the server (your application)
  # data:
  #   tls.crt: base64_encoded_certificate
  #   tls.key: base64_encoded_private_key
  # type: kubernetes.io/tls

resources: 
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "250m"
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /login
    port: http
readinessProbe:
  httpGet:
    path: /login
    port: http

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: sqlite-storage
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: sqlite-storage
    mountPath: /app/data
    readOnly: false

nodeSelector: {}

tolerations: []

affinity: {}
